const IS_DEVELOPMENT = !process.env.CI && process.env.NODE_ENV !== 'production';
const error = 'error';
const off = 'off';
const warn = IS_DEVELOPMENT ? 'warn' : 'error';

module.exports = {
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  globals: {
    globalThis: true,
  },
  ignorePatterns: ['**/.*/**', '**/node_modules/**'],
  overrides: [
    {
      files: ['**/*.ts', '**/*.tsx', '**/*.d.ts'],
      globals: {
        NodeJS: true,
      },
      parser: '@typescript-eslint/parser',
      parserOptions: {
        project: './tsconfig.json',
      },
      plugins: ['@typescript-eslint'],
      rules: {
        '@typescript-eslint/adjacent-overload-signatures': warn,
        '@typescript-eslint/array-type': [
          warn,
          {
            default: 'array',
          },
        ],
        '@typescript-eslint/await-thenable': warn,
        '@typescript-eslint/ban-ts-comment': warn,
        '@typescript-eslint/ban-tslint-comment': warn,
        '@typescript-eslint/ban-types': [
          off,
          {
            extendDefaults: true,
            types: {
              Boolean: false,
              Function: false,
              Number: false,
              Object: false,
              '{}': false,
            },
          },
        ],
        '@typescript-eslint/brace-style': warn,
        '@typescript-eslint/camelcase': off,
        '@typescript-eslint/class-literal-property-style': [warn, 'fields'],
        '@typescript-eslint/comma-dangle': [warn, 'always-multiline'],
        '@typescript-eslint/comma-spacing': [
          warn,
          { after: true, before: false },
        ],
        '@typescript-eslint/consistent-type-assertions': [
          off,
          {
            assertionStyle: 'as',
            objectLiteralTypeAssertions: 'never',
          },
        ],
        '@typescript-eslint/consistent-type-definitions': [warn, 'type'],
        '@typescript-eslint/consistent-type-imports': [
          warn,
          {
            disallowTypeAnnotations: true,
            prefer: 'no-type-imports',
          },
        ],
        '@typescript-eslint/default-param-last': warn,
        '@typescript-eslint/dot-notation': warn,
        '@typescript-eslint/explicit-function-return-type': [
          off,
          {
            allowTypedFunctionExpressions: true,
          },
        ],
        '@typescript-eslint/explicit-member-accessibility': [
          warn,
          {
            accessibility: 'no-public',
          },
        ],
        '@typescript-eslint/explicit-module-boundary-types': off,
        '@typescript-eslint/func-call-spacing': warn,
        '@typescript-eslint/indent': [
          warn,
          2,
          {
            SwitchCase: 1,
            // Ignored nodes due to false positives:
            ignoredNodes: [
              'TSIntersectionType',
              'TSTypeParameterInstantiation',
              'TSUnionType',
            ],
          },
        ],
        // Definition not found (2020-10-26):
        // '@typescript-eslint/index': warn,
        '@typescript-eslint/init-declarations': off,
        '@typescript-eslint/keyword-spacing': warn,
        '@typescript-eslint/lines-between-class-members': [
          warn,
          'always',
          {
            exceptAfterOverload: true,
            exceptAfterSingleLine: true,
          },
        ],
        '@typescript-eslint/member-delimiter-style': [
          warn,
          {
            multiline: {
              delimiter: 'semi',
              requireLast: true,
            },
            singleline: {
              delimiter: 'semi',
              requireLast: true,
            },
          },
        ],
        // Disabled to due buggy ordering:
        '@typescript-eslint/member-ordering': [
          off,
          {
            default: [
              'signature',
              'private-static-field',
              'protected-static-field',
              'public-static-field',
              'private-static-method',
              'protected-static-method',
              'public-static-method',
              'private-decorated-field',
              'protected-decorated-field',
              'public-decorated-field',
              'private-instance-field',
              'protected-instance-field',
              'public-instance-field',
              'private-abstract-field',
              'protected-abstract-field',
              'public-abstract-field',
              'static-field',
              'private-field',
              'protected-field',
              'public-field',
              'instance-field',
              'abstract-field',
              'decorated-field',
              'field',
              'private-constructor',
              'protected-constructor',
              'public-constructor',
              'constructor',
              'private-decorated-method',
              'protected-decorated-method',
              'public-decorated-method',
              'private-instance-method',
              'protected-instance-method',
              'public-instance-method',
              'private-abstract-method',
              'protected-abstract-method',
              'public-abstract-method',
              'static-method',
              'private-method',
              'protected-method',
              'public-method',
              'instance-method',
              'abstract-method',
              'decorated-method',
              'method',
            ],
          },
        ],
        '@typescript-eslint/method-signature-style': [warn, 'method'],
        '@typescript-eslint/naming-convention': [
          off,
          {
            format: ['camelCase'],
            leadingUnderscore: 'allow',
            selector: 'default',
          },
          {
            format: ['camelCase', 'snake_case', 'PascalCase', 'UPPER_CASE'],
            leadingUnderscore: 'allow',
            selector: ['objectLiteralProperty'],
          },
          {
            format: ['camelCase', 'PascalCase'],
            leadingUnderscore: 'allow',
            selector: ['function'],
          },
          {
            format: ['camelCase', 'UPPER_CASE'],
            leadingUnderscore: 'allow',
            selector: ['objectLiteralMethod', 'typeMethod', 'variable'],
          },
          {
            format: ['PascalCase'],
            leadingUnderscore: 'allow',
            selector: [
              'class',
              'enum',
              'interface',
              'typeAlias',
              'typeParameter',
            ],
          },
          {
            format: ['UPPER_CASE'],
            leadingUnderscore: 'allow',
            selector: ['enumMember'],
          },
          {
            format: null,
            leadingUnderscore: 'allow',
            selector: ['parameter', 'property'],
          },
        ],
        '@typescript-eslint/no-array-constructor': warn,
        '@typescript-eslint/no-base-to-string': warn,
        '@typescript-eslint/no-confusing-non-null-assertion': warn,
        '@typescript-eslint/no-dupe-class-members': warn,
        '@typescript-eslint/no-dynamic-delete': off,
        '@typescript-eslint/no-empty-function': warn,
        '@typescript-eslint/no-empty-interface': warn,
        '@typescript-eslint/no-explicit-any': off,
        '@typescript-eslint/no-extra-non-null-assertion': warn,
        '@typescript-eslint/no-extra-parens': [
          warn,
          'all',
          {
            ignoreJSX: 'all',
            nestedBinaryExpressions: false,
          },
        ],
        '@typescript-eslint/no-extra-semi': warn,
        '@typescript-eslint/no-extraneous-class': off,
        '@typescript-eslint/no-floating-promises': [
          warn,
          {
            ignoreIIFE: true,
            ignoreVoid: true,
          },
        ],
        '@typescript-eslint/no-for-in-array': warn,
        '@typescript-eslint/no-implicit-any-catch': off,
        '@typescript-eslint/no-implied-eval': warn,
        '@typescript-eslint/no-inferrable-types': warn,
        '@typescript-eslint/no-invalid-this': warn,
        '@typescript-eslint/no-invalid-void-type': off,
        '@typescript-eslint/no-loop-func': warn,
        '@typescript-eslint/no-loss-of-precision': warn,
        '@typescript-eslint/no-magic-numbers': [
          warn,
          {
            ignore: [-1, 0, 1, 2, 3, '-1n', '0n', '1n', '2n', '3n'],
            ignoreEnums: true,
            ignoreNumericLiteralTypes: true,
            ignoreReadonlyClassProperties: true,
          },
        ],
        '@typescript-eslint/no-misused-new': warn,
        '@typescript-eslint/no-misused-promises': off,
        '@typescript-eslint/no-namespace': [
          off,
          {
            allowDeclarations: true,
          },
        ],
        '@typescript-eslint/no-non-null-asserted-optional-chain': warn,
        '@typescript-eslint/no-non-null-assertion': off,
        '@typescript-eslint/no-parameter-properties': warn,
        '@typescript-eslint/no-redeclare': warn,
        '@typescript-eslint/no-require-imports': warn,
        '@typescript-eslint/no-shadow': warn,
        '@typescript-eslint/no-this-alias': warn,
        '@typescript-eslint/no-throw-literal': warn,
        '@typescript-eslint/no-type-alias': off,
        '@typescript-eslint/no-unnecessary-boolean-literal-compare': warn,
        '@typescript-eslint/no-unnecessary-condition': off,
        '@typescript-eslint/no-unnecessary-qualifier': warn,
        '@typescript-eslint/no-unnecessary-type-arguments': off,
        '@typescript-eslint/no-unnecessary-type-assertion': warn,
        '@typescript-eslint/no-unsafe-assignment': off,
        '@typescript-eslint/no-unsafe-call': off,
        '@typescript-eslint/no-unsafe-member-access': off,
        '@typescript-eslint/no-unsafe-return': off,
        '@typescript-eslint/no-unused-expressions': [
          warn,
          {
            allowShortCircuit: true,
            allowTaggedTemplates: true,
            allowTernary: true,
          },
        ],
        '@typescript-eslint/no-unused-vars': [
          warn,
          {
            args: 'after-used',
            argsIgnorePattern: '^_.*$',
            vars: 'all',
            varsIgnorePattern: '^_.*$|^T$',
          },
        ],
        '@typescript-eslint/no-use-before-define': [
          error,
          {
            classes: false,
            functions: false,
            variables: false,
          },
        ],
        '@typescript-eslint/no-useless-constructor': warn,
        '@typescript-eslint/no-var-requires': off,
        '@typescript-eslint/prefer-as-const': warn,
        '@typescript-eslint/prefer-enum-initializers': off,
        '@typescript-eslint/prefer-for-of': warn,
        '@typescript-eslint/prefer-function-type': warn,
        '@typescript-eslint/prefer-includes': warn,
        '@typescript-eslint/prefer-literal-enum-member': warn,
        '@typescript-eslint/prefer-namespace-keyword': warn,
        '@typescript-eslint/prefer-nullish-coalescing': warn,
        '@typescript-eslint/prefer-optional-chain': warn,
        '@typescript-eslint/prefer-readonly': warn,
        // Disabled due to error:
        // "Error: Non-null Assertion Failed: Expected to find a property "XXX" for the type."
        '@typescript-eslint/prefer-readonly-parameter-types': off,
        '@typescript-eslint/prefer-reduce-type-parameter': warn,
        '@typescript-eslint/prefer-regexp-exec': off,
        '@typescript-eslint/prefer-string-starts-ends-with': off,
        '@typescript-eslint/prefer-ts-expect-error': warn,
        '@typescript-eslint/promise-function-async': off,
        '@typescript-eslint/quotes': [warn, 'single'],
        '@typescript-eslint/require-array-sort-compare': [
          warn,
          {
            ignoreStringArrays: true,
          },
        ],
        '@typescript-eslint/require-await': warn,
        '@typescript-eslint/restrict-plus-operands': warn,
        // Disabled due to false positives:
        '@typescript-eslint/restrict-template-expressions': off,
        '@typescript-eslint/return-await': [warn, 'always'],
        '@typescript-eslint/semi': [warn, 'always'],
        '@typescript-eslint/space-before-function-paren': [warn, 'always'],
        '@typescript-eslint/strict-boolean-expressions': off,
        '@typescript-eslint/switch-exhaustiveness-check': off,
        '@typescript-eslint/triple-slash-reference': warn,
        '@typescript-eslint/type-annotation-spacing': warn,
        '@typescript-eslint/typedef': off,
        '@typescript-eslint/unbound-method': off,
        '@typescript-eslint/unified-signatures': warn,
        'default-case': off,
        'func-call-spacing': off,
        'import/extensions': off,
        'import/no-unassigned-import': off,
        // Disabled due to false positives:
        'import/no-unresolved': [
          off,
          {
            ignore: ['\\.types$'],
          },
        ],
        indent: off,
        'init-declarations': off,
        'jsdoc/check-examples': off,
        'jsdoc/require-description': off,
        'jsdoc/require-description-complete-sentence': off,
        'jsdoc/require-example': off,
        'jsdoc/require-file-overview': off,
        'jsdoc/require-hyphen-before-param-description': off,
        'jsdoc/require-jsdoc': off,
        'jsdoc/require-param': off,
        'jsdoc/require-param-description': off,
        'jsdoc/require-param-name': off,
        'jsdoc/require-param-type': off,
        'jsdoc/require-property': off,
        'jsdoc/require-property-description': off,
        'jsdoc/require-property-name': off,
        'jsdoc/require-property-type': off,
        'jsdoc/require-returns': off,
        'jsdoc/require-returns-check': off,
        'jsdoc/require-returns-description': off,
        'jsdoc/require-returns-type': off,
        'keyword-spacing': off,
        'lines-between-class-members': off,
        'no-dupe-class-members': off,
        'no-empty-function': off,
        'no-extra-parens': off,
        'no-extra-semi': off,
        'no-invalid-this': off,
        'no-loop-func': off,
        'no-loss-of-precision': off,
        'no-redeclare': off,
        'no-return-await': off,
        'no-shadow': off,
        /**
         * @see https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/FAQ.md#i-get-errors-from-the-no-undef-rule-about-global-variables-not-being-defined-even-though-there-are-no-typescript-errors
         */
        'no-undef': off,
        'no-unused-expressions': off,
        'no-unused-vars': off,
        'no-use-before-define': off,
        'no-useless-constructor': off,
        'no-void': off,
        quotes: off,
        'require-await': off,
        semi: off,
        'space-before-function-paren': off,
      },
    },
    {
      env: {
        jest: true,
        mocha: true,
      },
      files: [
        '**/spec/**',
        '**/test/**',
        '**/tests/**',
        '**/*.spec.*',
        '**/*.test.*',
      ],
      rules: {
        '@typescript-eslint/no-magic-numbers': off,
        'jsdoc/require-jsdoc': off,
        'no-magic-numbers': off,
        'sort-keys': off,
      },
    },
    {
      files: ['**/*.jsx', '**/*.tsx'],
      plugins: ['react', 'jsx-a11y'],
      rules: {
        'jsx-a11y/accessible-emoji': warn,
        'jsx-a11y/alt-text': warn,
        'jsx-a11y/anchor-has-content': warn,
        'jsx-a11y/anchor-is-valid': warn,
        'jsx-a11y/aria-activedescendant-has-tabindex': warn,
        'jsx-a11y/aria-props': warn,
        'jsx-a11y/aria-proptypes': warn,
        'jsx-a11y/aria-role': warn,
        'jsx-a11y/aria-unsupported-elements': warn,
        'jsx-a11y/autocomplete-valid': warn,
        'jsx-a11y/click-events-have-key-events': warn,
        'jsx-a11y/control-has-associated-label': [
          warn,
          {
            ignoreElements: [
              'audio',
              'canvas',
              'embed',
              'input',
              'textarea',
              'tr',
              'video',
            ],
            ignoreRoles: [
              'grid',
              'listbox',
              'menu',
              'menubar',
              'radiogroup',
              'row',
              'tablist',
              'toolbar',
              'tree',
              'treegrid',
            ],
            includeRoles: ['alert', 'dialog'],
          },
        ],
        'jsx-a11y/heading-has-content': warn,
        'jsx-a11y/html-has-lang': warn,
        'jsx-a11y/iframe-has-title': warn,
        'jsx-a11y/img-redundant-alt': warn,
        'jsx-a11y/interactive-supports-focus': [
          warn,
          {
            tabbable: [
              'button',
              'checkbox',
              'link',
              'progressbar',
              'searchbox',
              'slider',
              'spinbutton',
              'switch',
              'textbox',
            ],
          },
        ],
        'jsx-a11y/label-has-associated-control': warn,
        'jsx-a11y/label-has-for': off,
        'jsx-a11y/media-has-caption': warn,
        'jsx-a11y/mouse-events-have-key-events': warn,
        'jsx-a11y/no-access-key': warn,
        'jsx-a11y/no-autofocus': warn,
        'jsx-a11y/no-distracting-elements': warn,
        'jsx-a11y/no-interactive-element-to-noninteractive-role': warn,
        'jsx-a11y/no-noninteractive-element-interactions': [
          warn,
          {
            body: ['onError', 'onLoad'],
            iframe: ['onError', 'onLoad'],
            img: ['onError', 'onLoad'],
          },
        ],
        'jsx-a11y/no-noninteractive-element-to-interactive-role': warn,
        'jsx-a11y/no-noninteractive-tabindex': warn,
        'jsx-a11y/no-redundant-roles': warn,
        'jsx-a11y/no-static-element-interactions': warn,
        'jsx-a11y/role-has-required-aria-props': warn,
        'jsx-a11y/role-supports-aria-props': warn,
        'jsx-a11y/scope': warn,
        'jsx-a11y/tabindex-no-positive': warn,
        'react/boolean-prop-naming': warn,
        'react/button-has-type': warn,
        'react/default-props-match-prop-types': warn,
        'react/destructuring-assignment': off,
        'react/display-name': warn,
        'react/forbid-component-props': off,
        'react/forbid-dom-props': warn,
        'react/forbid-elements': warn,
        'react/forbid-foreign-prop-types': warn,
        'react/forbid-prop-types': warn,
        'react/function-component-definition': [
          warn,
          {
            namedComponents: 'arrow-function',
            unnamedComponents: 'arrow-function',
          },
        ],
        'react/jsx-boolean-value': warn,
        'react/jsx-child-element-spacing': warn,
        'react/jsx-closing-bracket-location': warn,
        'react/jsx-closing-tag-location': warn,
        'react/jsx-curly-brace-presence': [
          warn,
          {
            children: 'always',
            props: 'never',
          },
        ],
        'react/jsx-curly-newline': off,
        'react/jsx-curly-spacing': warn,
        'react/jsx-equals-spacing': warn,
        'react/jsx-filename-extension': [
          warn,
          {
            extensions: ['.jsx', '.tsx'],
          },
        ],
        'react/jsx-first-prop-new-line': warn,
        'react/jsx-fragments': warn,
        'react/jsx-handler-names': warn,
        'react/jsx-indent': [
          warn,
          2,
          {
            indentLogicalExpressions: true,
          },
        ],
        'react/jsx-indent-props': [warn, 2],
        'react/jsx-key': warn,
        'react/jsx-max-depth': off,
        'react/jsx-max-props-per-line': [
          warn,
          {
            maximum: 1,
            when: 'multiline',
          },
        ],
        'react/jsx-newline': off,
        'react/jsx-no-bind': [
          warn,
          {
            allowArrowFunctions: true,
            allowBind: true,
            allowFunctions: false,
            ignoreDOMComponents: false,
            ignoreRefs: false,
          },
        ],
        'react/jsx-no-comment-textnodes': warn,
        'react/jsx-no-constructed-context-values': warn,
        'react/jsx-no-duplicate-props': warn,
        'react/jsx-no-literals': warn,
        'react/jsx-no-script-url': warn,
        'react/jsx-no-target-blank': warn,
        'react/jsx-no-undef': warn,
        'react/jsx-no-useless-fragment': off,
        'react/jsx-one-expression-per-line': warn,
        'react/jsx-pascal-case': warn,
        'react/jsx-props-no-multi-spaces': warn,
        'react/jsx-props-no-spreading': off,
        'react/jsx-sort-default-props': warn,
        'react/jsx-sort-props': warn,
        /** @deprecated */
        'react/jsx-space-before-closing': off,
        'react/jsx-tag-spacing': [
          warn,
          {
            afterOpening: 'never',
            beforeClosing: 'allow',
            beforeSelfClosing: 'always',
            closingSlash: 'never',
          },
        ],
        'react/jsx-uses-react': warn,
        'react/jsx-uses-vars': warn,
        'react/jsx-wrap-multilines': [
          warn,
          {
            arrow: 'ignore',
            assignment: 'ignore',
            condition: 'ignore',
            declaration: 'ignore',
            logical: 'ignore',
            prop: 'ignore',
            return: 'parens',
          },
        ],
        'react/no-access-state-in-setstate': warn,
        'react/no-adjacent-inline-elements': off,
        'react/no-array-index-key': warn,
        'react/no-children-prop': warn,
        'react/no-danger': warn,
        'react/no-danger-with-children': warn,
        'react/no-deprecated': warn,
        'react/no-did-mount-set-state': warn,
        'react/no-did-update-set-state': warn,
        'react/no-direct-mutation-state': warn,
        'react/no-find-dom-node': warn,
        'react/no-is-mounted': warn,
        'react/no-multi-comp': warn,
        'react/no-redundant-should-component-update': warn,
        'react/no-render-return-value': warn,
        'react/no-set-state': off,
        'react/no-string-refs': warn,
        'react/no-this-in-sfc': warn,
        'react/no-typos': warn,
        'react/no-unescaped-entities': warn,
        'react/no-unknown-property': warn,
        'react/no-unsafe': warn,
        'react/no-unused-prop-types': warn,
        'react/no-unused-state': warn,
        'react/no-will-update-set-state': warn,
        'react/prefer-es6-class': warn,
        'react/prefer-read-only-props': warn,
        'react/prefer-stateless-function': warn,
        'react/prop-types': off,
        'react/react-in-jsx-scope': off,
        'react/require-default-props': off,
        'react/require-optimization': off,
        'react/require-render-return': warn,
        'react/self-closing-comp': warn,
        'react/sort-comp': [
          warn,
          {
            groups: {
              lifecycle: [
                'displayName',
                'propTypes',
                'contextTypes',
                'childContextTypes',
                'mixins',
                'statics',
                'defaultProps',
                'constructor',
                'getDefaultProps',
                'state',
                'getInitialState',
                'getChildContext',
                'getDerivedStateFromProps',
                'componentWillMount',
                'UNSAFE_componentWillMount',
                'componentDidMount',
                'componentWillReceiveProps',
                'UNSAFE_componentWillReceiveProps',
                'shouldComponentUpdate',
                'componentWillUpdate',
                'UNSAFE_componentWillUpdate',
                'getSnapshotBeforeUpdate',
                'componentDidUpdate',
                'componentDidCatch',
                'componentWillUnmount',
              ],
            },
            order: [
              'static-variables',
              'static-methods',
              'everything-else',
              'instance-variables',
              'instance-methods',
              'lifecycle',
              'render',
            ],
          },
        ],
        'react/sort-prop-types': warn,
        'react/state-in-constructor': off,
        'react/static-property-placement': warn,
        'react/style-prop-object': warn,
        'react/void-dom-elements-no-children': warn,
      },
    },
    {
      files: ['**/*.d.ts'],
      rules: {
        '@typescript-eslint/consistent-type-definitions': off,
        '@typescript-eslint/no-extraneous-class': off,
        '@typescript-eslint/no-use-before-define': off,
        'import/no-default-export': off,
        'jsdoc/require-jsdoc': off,
      },
    },
    {
      files: ['**/*.config.js', '**/*.config.ts'],
      rules: {
        '@typescript-eslint/no-magic-numbers': off,
        'no-magic-numbers': off,
      },
    },
    {
      files: [
        '**/*.stories.js',
        '**/*.stories.jsx',
        '**/*.stories.ts',
        '**/*.stories.tsx',
      ],
      rules: {
        'import/no-default-export': off,
        'react/no-multi-comp': off,
      },
    },
  ],
  parser: '@babel/eslint-parser',
  parserOptions: {
    allowAwaitOutsideFunction: true,
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2017,
    requireConfigFile: false,
    sourceType: 'module',
  },
  plugins: ['import', 'jsdoc', 'sort-keys'],
  root: true,
  rules: {
    'accessor-pairs': warn,
    'array-bracket-newline': off,
    'array-bracket-spacing': [warn, 'never'],
    'array-callback-return': warn,
    'array-element-newline': [warn, 'consistent'],
    'arrow-body-style': off,
    'arrow-parens': [warn, 'always'],
    'arrow-spacing': [warn, { after: true, before: true }],
    'block-scoped-var': warn,
    'block-spacing': [warn, 'always'],
    'brace-style': [warn, '1tbs'],
    'callback-return': [off, ['callback', 'cb', 'next']],
    camelcase: [off, { properties: 'never' }],
    'capitalized-comments': off,
    'class-methods-use-this': off,
    'comma-dangle': [warn, 'always-multiline'],
    'comma-spacing': [warn, { after: true, before: false }],
    'comma-style': [warn, 'last'],
    complexity: off,
    'computed-property-spacing': [warn, 'never'],
    'consistent-return': warn,
    'consistent-this': warn,
    'constructor-super': warn,
    curly: [warn, 'all'],
    'default-case': warn,
    'default-param-last': warn,
    'dot-location': [warn, 'property'],
    'dot-notation': [warn, { allowKeywords: true }],
    'eol-last': warn,
    eqeqeq: [warn, 'always', { null: 'ignore' }],
    'for-direction': warn,
    'func-call-spacing': [warn, 'never'],
    'func-name-matching': warn,
    'func-names': [off, 'as-needed'],
    'func-style': [off, 'expression'],
    'function-call-argument-newline': off,
    'function-paren-newline': off,
    'generator-star-spacing': [warn, { after: true, before: true }],
    'getter-return': warn,
    'global-require': off,
    'guard-for-in': warn,
    'handle-callback-err': [warn, '^(err|error)$'],
    'id-blacklist': warn,
    'id-length': off,
    'id-match': [warn, '^[$_]$|^[$_]?[_A-Za-z][A-Za-z0-9_]*$'],
    'implicit-arrow-linebreak': [off, 'beside'],
    'import/default': warn,
    'import/dynamic-import-chunkname': off,
    'import/export': warn,
    'import/exports-last': warn,
    'import/extensions': [
      warn,
      {
        js: 'always',
        json: 'always',
      },
    ],
    'import/first': warn,
    'import/group-exports': off,
    'import/imports-first': warn,
    'import/max-dependencies': off,
    // Disabled due to false positives:
    'import/named': off,
    // Disabled due to false positives:
    'import/namespace': off,
    'import/newline-after-import': warn,
    'import/no-absolute-path': warn,
    'import/no-amd': warn,
    'import/no-anonymous-default-export': warn,
    'import/no-commonjs': off,
    'import/no-cycle': off,
    'import/no-default-export': off,
    'import/no-deprecated': warn,
    'import/no-duplicates': warn,
    'import/no-dynamic-require': warn,
    'import/no-extraneous-dependencies': warn,
    'import/no-internal-modules': [
      warn,
      {
        allow: ['[@a-z][@a-z]*/**', '**/*.svg'],
      },
    ],
    'import/no-mutable-exports': warn,
    'import/no-named-as-default': warn,
    'import/no-named-as-default-member': warn,
    'import/no-named-default': warn,
    'import/no-named-export': off,
    'import/no-namespace': off,
    'import/no-nodejs-modules': off,
    // Disabled due to false positives (e.g. "@robinblomberg/schema"):
    'import/no-relative-parent-imports': off,
    'import/no-restricted-paths': warn,
    'import/no-self-import': warn,
    'import/no-unassigned-import': warn,
    'import/no-unresolved': warn,
    'import/no-unused-modules': warn,
    'import/no-useless-path-segments': warn,
    'import/no-webpack-loader-syntax': warn,
    /* 'import/order': [warn, {
      alphabetize: {
        caseInsensitive: false,
        order: 'asc'
      },
      groups: [
        'builtin',
        'external',
        'internal',
        'unknown',
        'parent',
        'sibling',
        'index',
        'object'
      ],
      'newlines-between': 'never'
    }], */
    'import/prefer-default-export': off,
    'import/unambiguous': off,
    indent: [
      warn,
      2,
      {
        SwitchCase: 1,
      },
    ],
    'init-declarations': off,
    'jsdoc/check-access': warn,
    'jsdoc/check-alignment': warn,
    'jsdoc/check-examples': warn,
    'jsdoc/check-indentation': [
      off,
      {
        excludeTags: ['example'],
      },
    ],
    'jsdoc/check-line-alignment': warn,
    'jsdoc/check-param-names': warn,
    'jsdoc/check-property-names': warn,
    'jsdoc/check-syntax': warn,
    'jsdoc/check-tag-names': warn,
    'jsdoc/check-types': [
      warn,
      {
        noDefaults: true,
      },
    ],
    'jsdoc/check-values': warn,
    'jsdoc/empty-tags': warn,
    'jsdoc/implements-on-classes': warn,
    'jsdoc/match-description': warn,
    'jsdoc/newline-after-description': warn,
    'jsdoc/no-bad-blocks': warn,
    'jsdoc/no-defaults': warn,
    'jsdoc/no-types': off,
    // Disable due to false positives when referring to a generic type from inside its function:
    'jsdoc/no-undefined-types': [
      off,
      {
        definedTypes: [
          'unknown',
          /**
           * @see typescript\lib\lib.es5.d.ts
           * @version 4.1.2
           */
          'PropertyKey',
          'PropertyDescriptor',
          'PropertyDescriptorMap',
          'ObjectConstructor',
          'FunctionConstructor',
          'ThisParameterType',
          'OmitThisParameter',
          'CallableFunction',
          'NewableFunction',
          'IArguments',
          'StringConstructor',
          'BooleanConstructor',
          'NumberConstructor',
          'TemplateStringsArray',
          'ImportMeta',
          'DateConstructor',
          'RegExpMatchArray',
          'RegExpExecArray',
          'RegExpConstructor',
          'ErrorConstructor',
          'EvalErrorConstructor',
          'RangeErrorConstructor',
          'ReferenceErrorConstructor',
          'SyntaxErrorConstructor',
          'TypeErrorConstructor',
          'URIErrorConstructor',
          'ReadonlyArray',
          'ConcatArray',
          'ArrayConstructor',
          'TypedPropertyDescriptor',
          'ClassDecorator',
          'PropertyDecorator',
          'MethodDecorator',
          'ParameterDecorator',
          'PromiseConstructorLike',
          'PromiseLike',
          'ArrayLike',
          'Partial',
          'Required',
          'Readonly',
          'Pick',
          'Exclude',
          'Extract',
          'Omit',
          'NonNullable',
          'Parameters',
          'ConstructorParameters',
          'ReturnType',
          'InstanceType',
          'ThisType',
          'ArrayBufferTypes',
          'ArrayBufferLike',
          'ArrayBufferConstructor',
          'ArrayBufferView',
          'DataViewConstructor',
          'Int8ArrayConstructor',
          'Uint8ArrayConstructor',
          'Uint8ClampedArrayConstructor',
          'Int16ArrayConstructor',
          'Uint16ArrayConstructor',
          'Int32ArrayConstructor',
          'Uint32ArrayConstructor',
          'Float32ArrayConstructor',
          'Float64ArrayConstructor',
        ],
      },
    ],
    'jsdoc/require-description': [
      off,
      {
        contexts: ['any'],
        descriptionStyle: 'body',
      },
    ],
    'jsdoc/require-description-complete-sentence': off,
    'jsdoc/require-example': off,
    'jsdoc/require-file-overview': off,
    'jsdoc/require-hyphen-before-param-description': [warn, 'never'],
    'jsdoc/require-jsdoc': [
      warn,
      {
        exemptEmptyFunctions: true,
        publicOnly: false,
        require: {
          ArrowFunctionExpression: true,
          ClassDeclaration: false,
          ClassExpression: false,
          FunctionDeclaration: true,
          FunctionExpression: true,
          MethodDefinition: true,
        },
      },
    ],
    'jsdoc/require-param': [
      warn,
      {
        checkConstructors: true,
        checkDestructured: true,
        checkDestructuredRoots: true,
        checkGetters: true,
        checkSetters: true,
      },
    ],
    'jsdoc/require-param-description': off,
    'jsdoc/require-param-name': warn,
    'jsdoc/require-param-type': [
      warn,
      {
        contexts: ['any'],
      },
    ],
    'jsdoc/require-property': warn,
    'jsdoc/require-property-description': warn,
    'jsdoc/require-property-name': warn,
    'jsdoc/require-property-type': warn,
    'jsdoc/require-returns': off,
    'jsdoc/require-returns-check': warn,
    'jsdoc/require-returns-description': off,
    'jsdoc/require-returns-type': warn,
    'jsdoc/valid-types': off,
    'jsx-quotes': warn,
    'key-spacing': [warn, { afterColon: true, beforeColon: false }],
    'keyword-spacing': [off, { after: true, before: true }],
    'line-comment-position': off,
    'linebreak-style': [warn, 'unix'],
    'lines-around-comment': off,
    'lines-between-class-members': [
      warn,
      'always',
      { exceptAfterSingleLine: true },
    ],
    'max-classes-per-file': [warn, 1],
    'max-depth': off,
    'max-len': [
      warn,
      {
        code: 100,
        ignoreComments: true,
        ignoreRegExpLiterals: true,
      },
    ],
    'max-lines': off,
    'max-lines-per-function': off,
    'max-nested-callbacks': warn,
    'max-params': off,
    'max-statements': off,
    'max-statements-per-line': [warn, { max: 1 }],
    'multiline-comment-style': off,
    'multiline-ternary': off,
    'new-cap': [warn, { capIsNew: false, newIsCap: true, properties: true }],
    'new-parens': warn,
    'newline-per-chained-call': off,
    'no-alert': off,
    'no-array-constructor': warn,
    'no-async-promise-executor': warn,
    'no-await-in-loop': warn,
    'no-bitwise': warn,
    'no-buffer-constructor': warn,
    'no-caller': warn,
    'no-case-declarations': warn,
    'no-class-assign': warn,
    'no-compare-neg-zero': warn,
    'no-cond-assign': warn,
    'no-confusing-arrow': warn,
    'no-console': [warn, { allow: ['debug', 'error', 'info', 'warn'] }],
    'no-const-assign': warn,
    'no-constant-condition': [warn, { checkLoops: false }],
    'no-continue': warn,
    'no-control-regex': off,
    'no-debugger': warn,
    'no-delete-var': warn,
    'no-div-regex': warn,
    'no-dupe-args': warn,
    'no-dupe-class-members': warn,
    'no-dupe-keys': warn,
    'no-duplicate-case': warn,
    'no-duplicate-imports': warn,
    'no-else-return': warn,
    'no-empty': [warn, { allowEmptyCatch: true }],
    'no-empty-character-class': warn,
    'no-empty-function': off,
    'no-empty-pattern': off,
    'no-eq-null': off,
    'no-eval': warn,
    'no-ex-assign': warn,
    'no-extend-native': warn,
    'no-extra-bind': warn,
    'no-extra-boolean-cast': warn,
    'no-extra-label': warn,
    'no-extra-parens': [off, 'all', { nestedBinaryExpressions: false }],
    'no-extra-semi': warn,
    'no-fallthrough': warn,
    'no-floating-decimal': warn,
    'no-func-assign': warn,
    'no-global-assign': warn,
    'no-implicit-coercion': [
      warn,
      {
        boolean: false,
      },
    ],
    'no-implicit-globals': warn,
    'no-implied-eval': warn,
    'no-inline-comments': off,
    'no-inner-declarations': [warn, 'functions'],
    'no-invalid-regexp': warn,
    'no-invalid-this': off,
    'no-irregular-whitespace': warn,
    'no-iterator': warn,
    'no-label-var': warn,
    'no-labels': [warn, { allowLoop: false, allowSwitch: false }],
    'no-lone-blocks': off,
    'no-lonely-if': warn,
    'no-loop-func': warn,
    'no-loss-of-precision': warn,
    'no-magic-numbers': [
      off,
      {
        ignore: [-1, 0, 1, 2, 3, '-1n', '0n', '1n', '2n', '3n'],
      },
    ],
    'no-misleading-character-class': warn,
    'no-mixed-operators': [
      warn,
      {
        allowSamePrecedence: true,
        groups: [
          ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
          ['&&', '||'],
          ['in', 'instanceof'],
        ],
      },
    ],
    'no-mixed-requires': warn,
    'no-mixed-spaces-and-tabs': warn,
    'no-multi-assign': warn,
    'no-multi-spaces': warn,
    'no-multi-str': warn,
    'no-multiple-empty-lines': [warn, { max: 1, maxEOF: 0 }],
    'no-negated-condition': warn,
    'no-negated-in-lhs': warn,
    'no-nested-ternary': warn,
    'no-new': warn,
    'no-new-func': warn,
    'no-new-object': warn,
    'no-new-require': warn,
    'no-new-symbol': warn,
    'no-new-wrappers': off,
    'no-obj-calls': warn,
    'no-octal': warn,
    'no-octal-escape': warn,
    'no-param-reassign': off,
    'no-path-concat': warn,
    'no-plusplus': off,
    'no-process-env': off,
    'no-process-exit': off,
    'no-proto': warn,
    'no-prototype-builtins': warn,
    'no-redeclare': [warn, { builtinGlobals: false }],
    'no-regex-spaces': warn,
    'no-restricted-globals': warn,
    'no-restricted-imports': warn,
    'no-restricted-modules': warn,
    'no-restricted-properties': warn,
    'no-restricted-syntax': [
      warn,
      'FunctionDeclaration',
      'LabeledStatement',
      'WithStatement',
    ],
    'no-return-assign': [warn, 'except-parens'],
    'no-return-await': off,
    'no-script-url': warn,
    'no-self-assign': [warn, { props: true }],
    'no-self-compare': warn,
    'no-sequences': warn,
    'no-shadow': warn,
    'no-shadow-restricted-names': warn,
    'no-sparse-arrays': warn,
    'no-sync': warn,
    'no-tabs': warn,
    'no-template-curly-in-string': warn,
    'no-ternary': off,
    'no-this-before-super': warn,
    'no-throw-literal': warn,
    'no-trailing-spaces': warn,
    'no-undef': error,
    'no-undef-init': warn,
    'no-undefined': off,
    'no-underscore-dangle': off,
    'no-unexpected-multiline': warn,
    'no-unmodified-loop-condition': warn,
    'no-unneeded-ternary': [warn, { defaultAssignment: false }],
    'no-unreachable': warn,
    'no-unsafe-finally': warn,
    'no-unsafe-negation': warn,
    'no-unused-expressions': [
      warn,
      {
        allowShortCircuit: true,
        allowTaggedTemplates: true,
        allowTernary: true,
      },
    ],
    'no-unused-labels': warn,
    'no-unused-vars': [
      warn,
      {
        args: 'after-used',
        argsIgnorePattern: '^_.*$',
        vars: 'all',
        varsIgnorePattern: '^_.*$|^T$',
      },
    ],
    'no-use-before-define': [
      error,
      {
        classes: false,
        functions: false,
        variables: false,
      },
    ],
    'no-useless-call': warn,
    'no-useless-catch': warn,
    'no-useless-computed-key': warn,
    'no-useless-concat': warn,
    'no-useless-constructor': warn,
    'no-useless-escape': warn,
    'no-useless-rename': warn,
    'no-useless-return': warn,
    'no-var': warn,
    'no-void': warn,
    'no-warning-comments': warn,
    'no-whitespace-before-property': warn,
    'no-with': warn,
    'nonblock-statement-body-position': warn,
    'object-curly-newline': [warn, { consistent: true, multiline: true }],
    'object-curly-spacing': [warn, 'always'],
    'object-property-newline': [
      warn,
      {
        allowMultiplePropertiesPerLine: true,
      },
    ],
    'object-shorthand': [warn, 'always'],
    'one-var': [warn, 'never'],
    'one-var-declaration-per-line': warn,
    'operator-assignment': [warn, 'always'],
    'operator-linebreak': [
      warn,
      'after',
      {
        overrides: {
          ':': 'before',
          '?': 'before',
          '??': 'before',
        },
      },
    ],
    'padded-blocks': [
      warn,
      {
        blocks: 'never',
        classes: 'never',
        switches: 'never',
      },
    ],
    'padding-line-between-statements': warn,
    'prefer-arrow-callback': warn,
    'prefer-const': [warn, { destructuring: 'all' }],
    'prefer-destructuring': [off, { array: false, object: true }],
    'prefer-named-capture-group': off,
    'prefer-numeric-literals': warn,
    'prefer-object-spread': warn,
    'prefer-promise-reject-errors': warn,
    'prefer-regex-literals': warn,
    'prefer-rest-params': warn,
    'prefer-spread': warn,
    'prefer-template': off,
    'quote-props': [warn, 'as-needed'],
    quotes: [
      warn,
      'single',
      {
        allowTemplateLiterals: false,
        avoidEscape: true,
      },
    ],
    radix: warn,
    // Disabled due to false (?) positives:
    'require-atomic-updates': off,
    'require-await': warn,
    'require-unicode-regexp': off,
    'require-yield': warn,
    'rest-spread-spacing': [warn, 'never'],
    semi: [warn, 'always'],
    'semi-spacing': [warn, { after: true, before: false }],
    'semi-style': [warn, 'last'],
    'sort-imports': [
      off,
      {
        ignoreCase: false,
        ignoreDeclarationSort: false,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ['none', 'all', 'single', 'multiple'],
      },
    ],
    'sort-keys': off,
    'sort-keys/sort-keys-fix': [warn, 'asc', { natural: false }],
    'sort-vars': warn,
    'space-before-blocks': [warn, 'always'],
    'space-before-function-paren': [warn, 'always'],
    'space-in-parens': [warn, 'never'],
    'space-infix-ops': warn,
    'space-unary-ops': [warn, { nonwords: false, words: true }],
    'spaced-comment': [
      warn,
      'always',
      {
        block: {
          balanced: true,
          exceptions: ['*'],
        },
        line: {
          markers: ['!', '?', '*', '/', '//'],
        },
      },
    ],
    strict: [warn, 'never'],
    'switch-colon-spacing': [
      warn,
      {
        after: true,
        before: false,
      },
    ],
    'symbol-description': warn,
    'template-curly-spacing': [warn, 'never'],
    'template-tag-spacing': [warn, 'never'],
    'unicode-bom': [warn, 'never'],
    'use-isnan': warn,
    'valid-typeof': [warn, { requireStringLiterals: true }],
    'vars-on-top': warn,
    'wrap-iife': [warn, 'any', { functionPrototypeMethods: true }],
    'wrap-regex': off,
    'yield-star-spacing': [warn, 'both'],
    yoda: [warn, 'never'],
  },
  settings: {
    'import/extensions': ['.js', '.ts'],
    'import/internal-regex': '^@',
    jsdoc: {
      mode: 'closure',
    },
    react: {
      version: 'detect',
    },
  },
};
